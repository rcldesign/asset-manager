name: Security & Dependencies

on:
  schedule:
    # Run daily at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
      - 'backend/package*.json'
      - 'backend/Dockerfile'

env:
  NODE_VERSION: '20'

jobs:
  # Job 1: Dependency Audit
  audit:
    name: Dependency Audit
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: backend/package-lock.json
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run npm audit
        run: |
          echo "Running npm audit..."
          npm audit --audit-level moderate --json > audit-results.json || true
          npm audit --audit-level moderate
        continue-on-error: true
      
      - name: Upload audit results
        uses: actions/upload-artifact@v4
        with:
          name: npm-audit-results
          path: backend/audit-results.json

  # Job 2: Security Vulnerability Scan
  snyk:
    name: Snyk Security Scan
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: backend/package-lock.json
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=medium --file=backend/package.json
        continue-on-error: true
      
      - name: Upload Snyk results
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: snyk.sarif

  # Job 3: CodeQL Analysis
  codeql:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      packages: read
      actions: read
      contents: read
    
    strategy:
      matrix:
        language: [ 'javascript' ]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}
          queries: security-extended,security-and-quality
      
      - name: Autobuild
        uses: github/codeql-action/autobuild@v3
      
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:${{matrix.language}}"

  # Job 4: Docker Image Security Scan
  docker-security:
    name: Docker Security Scan
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          file: ./backend/Dockerfile
          load: true
          tags: dumbassets-enhanced:security-scan
          cache-from: type=gha
          cache-to: type=gha,mode=max
      
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'dumbassets-enhanced:security-scan'
          format: 'sarif'
          output: 'trivy-results.sarif'
      
      - name: Upload Trivy scan results
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'

  # Job 5: License Compliance Check
  license-check:
    name: License Compliance
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: backend/package-lock.json
      
      - name: Install dependencies
        run: npm ci
      
      - name: Install license checker
        run: npm install -g license-checker
      
      - name: Check licenses
        run: |
          echo "Checking licenses..."
          license-checker --onlyAllow "MIT;ISC;BSD-2-Clause;BSD-3-Clause;Apache-2.0;Unlicense;CC0-1.0;WTFPL" --excludePrivatePackages --json > licenses.json
          license-checker --onlyAllow "MIT;ISC;BSD-2-Clause;BSD-3-Clause;Apache-2.0;Unlicense;CC0-1.0;WTFPL" --excludePrivatePackages
      
      - name: Upload license report
        uses: actions/upload-artifact@v4
        with:
          name: license-report
          path: backend/licenses.json

  # Job 6: Dependency Update Check
  dependency-update:
    name: Check for Updates
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: backend/package-lock.json
      
      - name: Install dependencies
        run: npm ci
      
      - name: Check for outdated packages
        run: |
          echo "Checking for outdated packages..."
          npm outdated --json > outdated.json || true
          npm outdated
        continue-on-error: true
      
      - name: Upload outdated packages report
        uses: actions/upload-artifact@v4
        with:
          name: outdated-packages
          path: backend/outdated.json

  # Job 7: Security Summary Report
  security-report:
    name: Security Summary
    runs-on: ubuntu-latest
    needs: [audit, snyk, codeql, docker-security, license-check]
    if: always()
    
    steps:
      - name: Download audit results
        uses: actions/download-artifact@v4
        with:
          name: npm-audit-results
        continue-on-error: true
      
      - name: Download license report
        uses: actions/download-artifact@v4
        with:
          name: license-report
        continue-on-error: true
      
      - name: Download outdated packages
        uses: actions/download-artifact@v4
        with:
          name: outdated-packages
        continue-on-error: true
      
      - name: Generate security summary
        run: |
          echo "# Security Scan Summary" > security-summary.md
          echo "" >> security-summary.md
          echo "**Date**: $(date)" >> security-summary.md
          echo "**Commit**: ${{ github.sha }}" >> security-summary.md
          echo "" >> security-summary.md
          
          echo "## Job Results" >> security-summary.md
          echo "- Dependency Audit: ${{ needs.audit.result }}" >> security-summary.md
          echo "- Snyk Scan: ${{ needs.snyk.result }}" >> security-summary.md
          echo "- CodeQL Analysis: ${{ needs.codeql.result }}" >> security-summary.md
          echo "- Docker Security: ${{ needs.docker-security.result }}" >> security-summary.md
          echo "- License Check: ${{ needs.license-check.result }}" >> security-summary.md
          echo "" >> security-summary.md
          
          if [ -f audit-results.json ]; then
            echo "## NPM Audit Summary" >> security-summary.md
            echo "```json" >> security-summary.md
            head -20 audit-results.json >> security-summary.md
            echo "```" >> security-summary.md
          fi
          
          echo "" >> security-summary.md
          echo "View full results in GitHub Security tab." >> security-summary.md
      
      - name: Upload security summary
        uses: actions/upload-artifact@v4
        with:
          name: security-summary
          path: security-summary.md
      
      - name: Comment on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            if (fs.existsSync('security-summary.md')) {
              const summary = fs.readFileSync('security-summary.md', 'utf8');
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: summary
              });
            }
      
      - name: Notify security team
        if: needs.audit.result == 'failure' || needs.snyk.result == 'failure'
        uses: 8398a7/action-slack@v3
        with:
          status: custom
          custom_payload: |
            {
              "text": "ðŸš¨ Security vulnerabilities detected in DumbAssets Enhanced!",
              "attachments": [
                {
                  "color": "danger",
                  "fields": [
                    {
                      "title": "Repository",
                      "value": "${{ github.repository }}",
                      "short": true
                    },
                    {
                      "title": "Commit",
                      "value": "${{ github.sha }}",
                      "short": true
                    },
                    {
                      "title": "View Details",
                      "value": "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}",
                      "short": false
                    }
                  ]
                }
              ]
            }
          webhook_url: ${{ secrets.SLACK_WEBHOOK }}
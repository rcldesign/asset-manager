{
  "name": "backend",
  "version": "1.0.0",
  "main": "index.js",
  "scripts": {
    "dev": "tsx watch src/server.ts",
    "build": "tsc",
    "start": "node dist/server.js",
    "lint": "eslint src --ext .ts",
    "lint:fix": "eslint src --ext .ts --fix",
    "format": "prettier --write \"src/**/*.ts\"",
    "format:check": "prettier --check \"src/**/*.ts\"",
    "typecheck": "tsc --noEmit",
    "test": "npm run test:unit && npm run test:integration",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage",
    "test:unit": "jest --config jest.unit.config.ts",
    "test:integration": "npm run test:db:start && npm run test:db:wait && npm run test:db:migrate && npm run test:integration:run",
    "test:integration:run": "jest --config jest.integration.config.ts",
    "test:e2e": "npm run test:db:start && npm run test:db:wait && npm run test:db:migrate && jest --config jest.integration.config.ts --testPathPattern=e2e",
    "test:all": "jest",
    "test:db:check": "node scripts/check-test-db.js",
    "test:db:start": "(docker stop postgres-test 2>/dev/null || true) && (docker rm postgres-test 2>/dev/null || true) && docker run --name postgres-test -e POSTGRES_USER=testuser -e POSTGRES_PASSWORD=testpass -e POSTGRES_DB=asset_manager_test -p 5432:5432 -d postgres:15",
    "test:db:wait": "echo 'Waiting for test database...' && until docker exec postgres-test pg_isready -U testuser > /dev/null 2>&1; do sleep 1; done && sleep 2 && echo 'Database ready!'",
    "test:db:migrate": "DATABASE_URL=\"postgresql://testuser:testpass@localhost:5432/asset_manager_test?schema=public\" prisma migrate deploy",
    "test:db:stop": "docker stop postgres-test && docker rm postgres-test",
    "prisma:generate": "prisma generate",
    "prisma:migrate": "prisma migrate dev",
    "prisma:migrate:prod": "prisma migrate deploy",
    "prisma:studio": "prisma studio",
    "prisma:format": "prisma format",
    "migrate": "tsx src/migrations/cli.ts migrate",
    "migrate:validate": "tsx src/migrations/cli.ts validate",
    "migrate:example": "tsx src/migrations/cli.ts example"
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "description": "",
  "devDependencies": {
    "@eslint/js": "^9.28.0",
    "@jest/globals": "^30.0.0-beta.3",
    "@types/bcrypt": "^5.0.2",
    "@types/bcryptjs": "^2.4.6",
    "@types/cookie-parser": "^1.4.8",
    "@types/cors": "^2.8.19",
    "@types/crypto-js": "^4.2.2",
    "@types/express": "^5.0.2",
    "@types/express-session": "^1.18.1",
    "@types/ioredis": "^4.28.10",
    "@types/jest": "^29.5.14",
    "@types/jsonwebtoken": "^9.0.9",
    "@types/node": "^22.15.29",
    "@types/openid-client": "^3.1.6",
    "@types/pg": "^8.15.4",
    "@types/qrcode": "^1.5.5",
    "@types/speakeasy": "^2.0.10",
    "@types/supertest": "^6.0.3",
    "@types/uuid": "^10.0.0",
    "@typescript-eslint/eslint-plugin": "^8.33.1",
    "@typescript-eslint/parser": "^8.33.1",
    "eslint-config-prettier": "^10.1.5",
    "eslint-plugin-prettier": "^5.4.1",
    "jest": "^29.7.0",
    "jest-mock-extended": "^3.0.5",
    "nodemon": "^3.1.10",
    "supertest": "^7.1.1",
    "ts-jest": "^29.3.4",
    "ts-node": "^10.9.2",
    "tsx": "^4.19.4",
    "typescript-eslint": "^8.33.1"
  },
  "dependencies": {
    "@prisma/client": "^6.9.0",
    "@types/swagger-jsdoc": "^6.0.4",
    "@types/swagger-ui-express": "^4.1.8",
    "bcrypt": "^6.0.0",
    "bullmq": "^5.53.2",
    "cookie-parser": "^1.4.7",
    "cors": "^2.8.5",
    "crypto-js": "^4.2.0",
    "dotenv": "^16.5.0",
    "express": "^5.1.0",
    "express-rate-limit": "^7.5.0",
    "express-session": "^1.18.1",
    "helmet": "^8.1.0",
    "ioredis": "^5.6.1",
    "jsonwebtoken": "^9.0.2",
    "openid-client": "^6.5.0",
    "prisma": "^6.9.0",
    "qrcode": "^1.5.4",
    "speakeasy": "^2.0.0",
    "swagger-jsdoc": "^6.2.8",
    "swagger-ui-express": "^5.0.1",
    "uuid": "^11.1.0",
    "zod": "^3.25.51"
  }
}
